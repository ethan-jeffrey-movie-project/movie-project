tmdb api: provides movies to the user
rotten tomatoes api: ratings

overview:

Create two forms:

Form 1: My Favorites - displays data from the JSON file and allows users to perform CRUD operations on it ( edit,  rate).

Form 2: Discover Movies - displays movies from TMDB that the user can scroll through
when they reach the end make a new fetch

and search for specific movies.
- fix the initial search, you'll get a warning the first time
- when the search button is entered or pressed,
hide the movie genres,
- when the user is searching for a movie, show the possible movies that they could select

Whenever the user searches for a specific movie in Form 2,
You can then compare the movie ID to the IDs in your JSON file to see if the movie is already in your favorites.

If the movie is already in your favorites, you'll use the information from the JSON file to display the movie data.
- if the id matches it'll show that it is currently saved in your json file
If the movie is not in your favorites, you'll use the information from TMDB to display the movie data.

edit description
edit rating
The updated data will then be displayed in both Form 1 and Form 2.

Whenever a user rates a movie,
the rating data can be saved to the JSON file.
This way, the user can see their rating in Form 1 and it will also be displayed in Form 2.

reload , fill the input form with my selection , i get this warning,"form submission canceled because the form is not connected",
input clears, fill the input form with my selection again , i can see the fetch request in the console along with what i wanted to search for

implement the cartwheel
- have the cartwheel in a different html form
- cartwheel will have your favorite movies
- fetch all your favorite movies from the endpoint
- only display title
-spin wheel button will spin again and display the movie title

https://api.themoviedb.org/3/movie/594767?api_key=214b0c421aba976a138bfac1f35db29b&language=en-US

https://api.themoviedb.org/3/movie/${movieId}?api_key=${movie_key}&language=en-US

use this for url
https://vivid-flawless-almandine.glitch.me/movies

to delete
https://vivid-flawless-almandine.glitch.me/movies/${movie_id}

to get specific movie
https://vivid-flawless-almandine.glitch.me/movies/${movie_id}


